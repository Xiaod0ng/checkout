var router = require("express").Router();

const { Checkout } = require("checkout-sdk-node");
require("dotenv").config();

const SECRET_KEY = process.env.SECRET_KEY;

router.post("/create-payment-sessions", async (_req, res) => {
  // Create a PaymentSession
  const request = await fetch(
    "https://api.sandbox.checkout.com/payment-sessions",
    {
      method: "POST",
      headers: {
        Authorization: `Bearer ${SECRET_KEY}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        amount: 20000,
        currency: "HKD",
        processing_channel_id: process.env.PROCESSING_CHANNEL,
        reference: "ORD-123A",
        description: "Payment for phone case",
        billing_descriptor: {
          name: "Jia Tsang",
          city: "London",
        },
        customer: {
          email: "jia.tsang@example.com",
          name: "Jia Tsang",
        },
        shipping: {
          address: {
            address_line1: "123 High St.",
            address_line2: "Flat 456",
            city: "London",
            zip: "SW1A 1AA",
            country: "GB",
          },
          phone: {
            number: "1234567890",
            country_code: "+44",
          },
        },
        billing: {
          address: {
            address_line1: "123 High St.",
            address_line2: "Flat 456",
            city: "London",
            zip: "SW1A 1AA",
            country: "GB",
          },
          phone: {
            number: "1234567890",
            country_code: "+44",
          },
        },
        risk: {
          enabled: true,
        },
        success_url: "http://localhost:4242/?status=succeeded",
        failure_url: "http://localhost:4242/?status=failed",
        metadata: {},
        "3ds": {
          enabled: true,
        },
        items: [
          {
            name: "iPhone 13 Case",
            quantity: 1,
            unit_price: 10000,
          },
          {
            name: "iPhone 14 Case",
            quantity: 1,
            unit_price: 10000,
          },
        ],
      }),
    }
  );

  const parsedPayload = await request.json();

  res.status(request.status).send(parsedPayload);
});

// const cko = new Checkout(process.env.SECRET_KEY);
// router.post("/pay", async (req, res) => {
//   // The token generated by Frames on the front end
//   const myToken = req.body.token;

//   const paymentResponse = await cko.payments.request({
//     source: {
//       type: "token",
//       token: myToken,
//     },
//     amount: 20000,
//     currency: "HKD",
//     processing_channel_id: process.env.PROCESSING_CHANNEL,
//     risk: {
//       enabled: false,
//     },
//   });

//   res.send(paymentResponse);
// });

module.exports = router;
